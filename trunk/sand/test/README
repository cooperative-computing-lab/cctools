--------------------------------------------------------------------------------
SAND: simple overlapping (candidate selection / alignment) example
--------------------------------------------------------------------------------

The example included here produces OVL records describing the results
of the overlapping step for a very small assembly.  The example is
executed as a script (test_example.sh) that will generate a list of
candidate pairs and then run a sample alignment on each pair in the
list.  The resulting OVL records are compared against a correct key as
verification.

The following will explain how to run the example, and describe the
common execution steps included in the example script. 

Setup and Execution
-------------------

The example script is meant to be run in-place. Once the
CCTools have been made, it can be executed simply as:
./test_example.sh

--The example script converts a small set of sequences into the
  compressed fasta-like format used by the SAND modules.

--The example script starts a worker running on localhost,
  looking for a master on localhost port 9091. If that port is in use,
  change the example to use a free port.

--The example script next starts the filter_master process, which controls
  the candidate selection workload execution. The master takes several
  options (here 10 subsets to filter, port 9091, and binary data mode)
  and two mandatory arguments: the sequence library, and an output
  target candidate file. For more on options, run: filter_master -h

--The worker from the candidate selection is forcibly killed, so the
  example script starts another worker running on localhost,
  looking for a master on localhost port 9091. If that port is in use,
  again, change the example to use a free port.

--The example script next starts the master process, which controls
  the alignment workload execution. The master takes several options
  (here 1 candidate per Work Queue task, and port 9091) and four
  mandatory arguments: the serial alignment executable to run, the
  candidate list, the sequence library, and an output target. For more
  on options, run: sand_align -h

--Once the master process has completed, the output is compared
  against a correct version of the OVL results, and the example
  script waits for the worker to time-out.

--The created files are then deleted (with the option to keep the results)

--------------------------------------------------------------------------------
