/** @mainpage CCTools API Documentation

This is the API reference manual for the CCTools package,
which includes TaskVine, Work Queue, Makeflow, Parrot, Chirp and other software.
This provides detailed documentation of programming the libraries
in Python and C.
For a more general introduction to the software and how to use it
from the command line, please see the [CCTools Manual](http://cctools.readthedocs.io)

If you are writing a TaskVine application, start here:

- @ref ndcctools.taskvine (TaskVine Python Interface)
- @ref taskvine.h (TaskVine C Interface)

If you are writing a Work Queue application, start here:

- @ref ndcctools.work_queue (Work Queue Python Interface)
- @ref work_queue.h (Work Queue C Interface)

If you are writing a programs to access the Chirp filesystem, start here:

- @ref ndcctools.chirp (Chirp Python Interface)
- @ref chirp_reli.h    (Chirp C Interface)

If you are writing a program to submit jobs to arbitrary batch systems,
including Work Queue, HTCondor, Amazon EC2, etc. start here:

- @ref batch_job.h

Throughout the CCTools packages, there are a number of other support modules that implement debugging, communication, and data structures.  The most commonly used are:

- Data Structures:
   - @ref list.h
   - @ref hash_table.h
   - @ref itable.h
- Networking:
   - @ref link.h (i.e. a TCP connection)
   - @ref datagram.h (i.e. a UDP endpoint)
   - @ref domain_name_cache.h
- JSON Parsing/Printing
   - @ref jx.h
   - @ref jx_print.h
   - @ref jx_parse.h
- Miscellaneous
   - @ref debug.h
   - @ref copy_stream.h
   - @ref copy_tree.h

Or, you can browse all documented modules in the package:

- [See All C Files](files.html)
- [See All Python Namespaces](namespaces.html)
*/

/*
Note this docstring goes here to provide a common
landing page for all the ndcctools namespaces.
*/

/** @namespace ndcctools
Python interfaces to the Cooperative Computing Tools (CCTools)
from the University of Notre Dame.
*/
