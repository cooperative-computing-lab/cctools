Enter context expression (or {} for an empty context):
Now enter expressions:
expression: 10
value:      10

expression: 3847.58
value:      3847.58

expression: 0.5
value:      0.5

expression: 10
value:      10

expression: 987
value:      987

expression: 12347812309487
value:      12347812309487

expression: "hello"
value:      "hello"

expression: "goodbye\n"
value:      "goodbye\n"

expression: "\"quotes\""
value:      "\"quotes\""

expression: "tab\ttab\ttab\rreturn\nnewline\n"
value:      "tab\ttab\ttab\rreturn\nnewline\n"

expression: "\\\\\\\\"
value:      "\\\\\\\\"

expression: true
value:      true

expression: false
value:      false

expression: null
value:      null

expression: true&&true
value:      true

expression: true&&false
value:      false

expression: false&&true
value:      false

expression: false&&false
value:      false

expression: true||true
value:      true

expression: true||false
value:      true

expression: false||true
value:      true

expression: false||false
value:      false

expression: !true
value:      false

expression: !false
value:      true

expression: 10==20
value:      false

expression: 10!=20
value:      true

expression: 10<20
value:      true

expression: 10<=20
value:      true

expression: 10>20
value:      false

expression: 10>=20
value:      false

expression: 10.5==20.5
value:      false

expression: 10.5!=20.5
value:      true

expression: 10.5<20.5
value:      true

expression: 10.5<=20.5
value:      true

expression: 10.5>20.5
value:      false

expression: 10.5>=20.5
value:      false

expression: "hello"=="goodbye"
value:      false

expression: "hello"!="goodbye"
value:      true

expression: "hello"<="goodbye"
value:      false

expression: "hello"<"goodbye"
value:      false

expression: "hello">"goodbye"
value:      true

expression: "hello">="goodbye"
value:      true

expression: "hello"=="hello"
value:      true

expression: "hello"!="hello"
value:      false

expression: "hello"<="hello"
value:      true

expression: "hello"<"hello"
value:      false

expression: "hello">"hello"
value:      false

expression: "hello">="hello"
value:      true

expression: a==b
value:      false

expression: a!=b
value:      true

expression: a<b
value:      Error{"source":"jx_eval","name":"unsupported operator","message":"unsupported operator on boolean","operator":true<false,"code":1}

expression: a>b
value:      Error{"source":"jx_eval","name":"unsupported operator","message":"unsupported operator on boolean","operator":true>false,"code":1}

expression: a<=b
value:      Error{"source":"jx_eval","name":"unsupported operator","message":"unsupported operator on boolean","operator":true<=false,"code":1}

expression: a>=b
value:      Error{"source":"jx_eval","name":"unsupported operator","message":"unsupported operator on boolean","operator":true>=false,"code":1}

expression: f==g
value:      false

expression: f!=g
value:      true

expression: f<g
value:      true

expression: f>g
value:      false

expression: f<=g
value:      true

expression: f>=g
value:      false

expression: x==y
value:      false

expression: x!=y
value:      true

expression: x<y
value:      true

expression: x>y
value:      false

expression: x<=y
value:      true

expression: x>=y
value:      false

expression: a+b
value:      Error{"source":"jx_eval","name":"unsupported operator","message":"unsupported operator on boolean","operator":true+false,"code":1}

expression: a-b
value:      Error{"source":"jx_eval","name":"unsupported operator","message":"unsupported operator on boolean","operator":true-false,"code":1}

expression: a*b
value:      Error{"source":"jx_eval","name":"unsupported operator","message":"unsupported operator on boolean","operator":true*false,"code":1}

expression: a/b
value:      Error{"source":"jx_eval","name":"unsupported operator","message":"unsupported operator on boolean","operator":true/false,"code":1}

expression: a%b
value:      Error{"source":"jx_eval","name":"unsupported operator","message":"unsupported operator on boolean","operator":true%false,"code":1}

expression: f+g
value:      3.64159

expression: f-g
value:      -2.64159

expression: f*g
value:      1.5708

expression: f/g
value:      0.159155

expression: f%g
value:      0

expression: x+y
value:      30

expression: x-y
value:      -10

expression: x*y
value:      200

expression: x/y
value:      0

expression: x%y
value:      10

expression: x&&y
value:      0

expression: x||y
value:      30

expression: (x+y)*(f+g)
value:      109.248

expression: 10+20*30
value:      610

expression: 10*(20+30)
value:      500

expression: a==b||(f>g&&x<y)
value:      false

expression: [10,-90.5,true,false,null,[-1,-2,-3]]
value:      [10,-90.5,true,false,null,[-1,-2,-3]]

expression: list[2]
value:      300

expression: object["house"]
value:      "home"

expression: {"command":"grep English "+infile+" > "+outfile,"inputs":["/usr/bin/grep",infile],"outputs":[outfile],"environment":{"PATH":"/usr/bin"},"cores":1,"memory":16,"disk":1}
value:      {"command":"grep English mydata > results","inputs":["/usr/bin/grep","mydata"],"outputs":["results"],"environment":{"PATH":"/usr/bin"},"cores":1,"memory":16,"disk":1}

expression: range(5)
value:      [0,1,2,3,4]

expression: range(3,7)
value:      [3,4,5,6]

expression: range(7,3)
value:      []

expression: range(-1,10,2)
value:      [-1,1,3,5,7,9]

expression: range(1,10,0)
value:      Error{"source":"jx_eval","name":"invalid arguments","message":"step must be nonzero","function":range(1,10,0),"code":6}

expression: range(0,5,-1)
value:      []

expression: range(5,0,1)
value:      []

expression: range(5,0,-1)
value:      [5,4,3,2,1]

expression: str()
value:      ""

expression: str(2)
value:      "2"

expression: str(x+y)
value:      "30"

expression: str(x,y)
value:      Error{"source":"jx_eval","name":"invalid arguments","message":"at most one argument is allowed","function":str(x,y),"code":6}

expression: str(range(10))
value:      "[0,1,2,3,4,5,6,7,8,9]"

expression: str("a")
value:      "a"

expression: foreach("too","few")
value:      Error{"source":"jx_eval","name":"invalid arguments","message":"invalid arguments","function":foreach("too","few"),"code":6}

expression: foreach(x,"nope",str(x))
value:      Error{"source":"jx_eval","name":"invalid arguments","message":"second argument must evaluate to an array","function":foreach(x,"nope",str(x)),"code":6}

expression: foreach(x,range(5),"item"+str(x))
value:      ["item0","item1","item2","item3","item4"]

expression: join(["a","b",c])
value:      Error{"source":"jx_eval","name":"undefined symbol","message":"undefined symbol","context":{"outfile":"results","infile":"mydata","a":true,"b":false,"f":0.5,"g":3.14159,"x":10,"y":20,"list":[100,200,300],"object":{"house":"home"}},"symbol":c,"code":0}

expression: join([1,2])
value:      Error{"source":"jx_eval","name":"invalid arguments","message":"joined items must be strings","func":join([1,2]),"code":6}

expression: join(["a",2])
value:      Error{"source":"jx_eval","name":"invalid arguments","message":"joined items must be strings","func":join(["a",2]),"code":6}

expression: join([])
value:      ""

expression: join(["a"])
value:      "a"

expression: join(["a","b","c"])
value:      "a b c"

expression: join(["a","b","c"],", ")
value:      "a, b, c"

expression: dbg(join(dbg(foreach(x,dbg(range(dbg(3))),dbg(dbg(str(dbg(x)))+dbg(".")+dbg(str(dbg(dbg(x)+dbg(1)))))))))
value:      "0.1 1.2 2.3"

expression: 10+[1]
value:      Error{"source":"jx_eval","name":"mismatched types","message":"mismatched types for operator","operator":10+[1],"code":2}

expression: "abc"+[2]
value:      Error{"source":"jx_eval","name":"mismatched types","message":"mismatched types for operator","operator":"abc"+[2],"code":2}

expression: []+[]
value:      []

expression: []+[1]
value:      [1]

expression: [1]+[]
value:      [1]

expression: [1,2]+[3]
value:      [1,2,3]

expression: [1,2]+[]+[4,[5,6]]
value:      [1,2,4,[5,6]]

expression: [10]==[10]
value:      true

expression: [10]!=[10]
value:      false

expression: [1,2,3]==[1,3,2]
value:      false

expression: [1,2,[3,4]]==[1,2,[3,4]]
value:      true

expression: Error{"source":"jx_eval","op":10+[1],"line":409,"file":"jx_eval.c","message":"mismatched types for operator","name":"TypeError"}
value:      Error{"source":"jx_eval","op":10+[1],"line":409,"file":"jx_eval.c","message":"mismatched types for operator","name":"TypeError"}

